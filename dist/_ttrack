#compdef ttrack

autoload -U is-at-least

_ttrack() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-f+[File where to store tracking data]:FILE:_files' \
'--file=[File where to store tracking data]:FILE:_files' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_ttrack_commands" \
"*::: :->ttrack" \
&& ret=0
    case $state in
    (ttrack)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:ttrack-command-$line[1]:"
        case $line[1] in
            (track)
_arguments "${_arguments_options[@]}" \
'-t+[The time duration of the record]:TIME: ' \
'--time=[The time duration of the record]:TIME: ' \
'-d+[The description of the time record (what has been done)]:DESCRIPTION: ' \
'--description=[The description of the time record (what has been done)]:DESCRIPTION: ' \
'-p+[The project with which this record is associated with]:PROJECT: ' \
'--project=[The project with which this record is associated with]:PROJECT: ' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(report)
_arguments "${_arguments_options[@]}" \
'--since=[The date since when we want the report to start]:SINCE: ' \
'--until=[The date until when we want the report to end]:UNTIL: ' \
'--by-project[Report time by project]' \
'--today[Only report data from today]' \
'--yesterday[Only report data from yesterday]' \
'--this-week[Only report data from the current week (monday to sunday)]' \
'--last-week[Only report data from the current week (monday to sunday)]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_ttrack__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:ttrack-help-command-$line[1]:"
        case $line[1] in
            (track)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(report)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_ttrack_commands] )) ||
_ttrack_commands() {
    local commands; commands=(
'track:Track a new time record' \
't:Track a new time record' \
'report:Generate report from the records' \
'r:Generate report from the records' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'ttrack commands' commands "$@"
}
(( $+functions[_ttrack__help_commands] )) ||
_ttrack__help_commands() {
    local commands; commands=(
'track:Track a new time record' \
'report:Generate report from the records' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'ttrack help commands' commands "$@"
}
(( $+functions[_ttrack__help__help_commands] )) ||
_ttrack__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'ttrack help help commands' commands "$@"
}
(( $+functions[_ttrack__help__report_commands] )) ||
_ttrack__help__report_commands() {
    local commands; commands=()
    _describe -t commands 'ttrack help report commands' commands "$@"
}
(( $+functions[_ttrack__report_commands] )) ||
_ttrack__report_commands() {
    local commands; commands=()
    _describe -t commands 'ttrack report commands' commands "$@"
}
(( $+functions[_ttrack__help__track_commands] )) ||
_ttrack__help__track_commands() {
    local commands; commands=()
    _describe -t commands 'ttrack help track commands' commands "$@"
}
(( $+functions[_ttrack__track_commands] )) ||
_ttrack__track_commands() {
    local commands; commands=()
    _describe -t commands 'ttrack track commands' commands "$@"
}

if [ "$funcstack[1]" = "_ttrack" ]; then
    _ttrack "$@"
else
    compdef _ttrack ttrack
fi
